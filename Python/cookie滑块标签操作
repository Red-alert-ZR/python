import requests
from selenium import webdriver
import time
import xpath
#键盘
from selenium.webdriver.common.keys import Keys
#鼠标
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support.select import Select
from selenium.webdriver.common.by import By
from selenium.webdriver.support import  expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait

def main():
'''
    # 设置手机型号
    mobileEmulaion = {'deviceName': 'iPhone 6/7/8'}
    #使用手机浏览
    options.add_experimental_option('mobileEmulaion',mobileEmulaion)

    # 静默模式
    options.add_argument("headless")

     #加代理 http https sock4 sock5
    options.add_argument('--proxy--server=%s'%'sock5://127.0.0.1:10808')

    #更改浏览器的语言
    options.add_argument("--lag=en-US")

'''
    #指定调用某个地方的chrom
    options = webdriver.ChromeOptions()
    location = r"D:\IT社团\pythonProject1\chrome-win\chrome.exe"
    #在option里增加读取位置
    options.binary_location = location
    # 某些网站会识别selenium
    options.add_experimental_option('excludeSwitches',['enable-automation'])


    driver = webdriver.Chrome("D:\IT社团\pythonProject1\chromedriver.exe",options=options)
    #使用get方法打开网站
    #driver.get("http://127.0.0.1/1.html")
    driver.get("http://www.4399dmw.com/search/dh-1-0-0-0-0-0-0/")
    target1 = driver.find_element_by_xpath("//div[@class='lst']/a[3]")
    ActionChains(driver).click(target1).perform()


    time.sleep(3)
    #关闭webdriver
    driver.quit()
    pass



''' 
    #图片不加载
    prefs = {
        'profile.default_content_setting_values':{
            'images':2
        }
    }
    options.add_experimental_option('prefs',prefs)
    driver = webdriver.Chrome("D:\IT社团\pythonProject1\chromedriver.exe",options=options)
 
    
    target1 = driver.find_element_by_xpath("//div[@class='lst']/a[3]")
    ActionChains(driver).click(target1).perform()

    target2 = driver.find_elements_by_xpath("//div[@class='lst']/a[2]")
    ActionChains(driver).click(target2).perform()

    driver.switch_to.window(driver.window_handles[0])
    driver.close()

    # 如果20内匹配的xpath语法是相同的，就返回true，不是就Flase
    a = WebDriverWait(driver, 20).until(EC.text_to_be_present_in_element(By.XPATH,"//div[@class='lst']/a[3]/div/p",u'吃鸡大作战'))
    print(a)

    # 如果20内ID=kw的元素被可见（高宽>0），就返回true，不是就Flase
    a = WebDriverWait(driver, 20).until(EC.visibility_of(driver.find_element(by=By.ID,value='kw')))
    print(a)

    # 如果20内class='lst'被加载出来，就返回true，不是就Flase
    a = WebDriverWait(driver, 20).until(EC.presence_of_element_located(By.CLASS_NAME,'lst'))
    print(a)

    #如果20内页面再在的是title是这个，就返回true，不是就报错
    a = WebDriverWait(driver,20).until_not(EC.title_is(u'热血动画片、动画电影-热血动画搜索-4399动画片大全'))
    print(a)

    #显性等待（使用频率最高的元素超时设置）
    WebDriverWait(driver,10).until(EC.presence_of_element_located(By.ID,'j-anime-nav'))
    until是用来检测指定的元素是否出现，如果在超时的时间内出现就返回选择器的信息，否则
    就报TimeOutException
    until_not用来检测指定的元素是否消失，如果在超时的时间内消失就返回选择器的信息，否则


    # 隐形等待，全局查找页面元素的等待时间，如果没找到指定元素，就抛出异常
    driver.implicitly_wait(20)

    #最大化
    #driver.maximize_window()
    #超时操作
    #如果10秒页面还未加载出来，就抛出一个异常，需要try来做
    #driver.set_page_load_timeout(10)

    time.sleep(1)
    driver.get("http://www.4399dmw.com/dh/cjdzz/")

    #浏览器操作
    #后退
    driver.back()
    time.sleep(2)
    #刷新
    driver.refresh()
    #前进
    driver.forward()

    #指定位置截图截图操作
    pic = driver.find_element_by_xpath("//div[@class='lst']/a[3]")
    pic.screenshot("./111.png")

    #截图操作
    driver.get_screenshot_as_file("./abc.jpg")
    

    #拖动滑块
    #拖动滑块到底部
    js = "document.documentElement.scrollTop=100"
    driver.execute_script(js)

    #查看cookie
    cookie = driver.get_cookies()
    print(cookie)
    #清除所有的cookie
    driver.delete_all_cookies()

    page = 0
    while True and page<15:
        try:
            print("现在开始爬第" + str(page+1) + "页")
            res = driver.find_elements_by_xpath("//div[@class='u-ct']/p[@class='u-tt']")
            for i in range(len(res)):
                print(res[i].text)

            #点到下一页
            driver.find_element_by_xpath("//a[contains(text(),'下一页')]").click()
            page= page+1

        except:
            break
    print("已经爬到最后一页了")
    
    
    #获取标签下的文字
    res = driver.find_elements_by_xpath("//div[@class='u-ct']")
    for i in range(len(res)):
        title = res[i].find_element_by_xpath("./p[@class='u-tt']").get_attribute("innerText")

        print(title)
        
        
    #释放iframe,回到主页面
    driver.switch_to.default_content()

    #方法二
    find_div = driver.find_elements_by_tag_name("iframe")
    driver.switch_to.frame(find_div[])
    
    #方法一
    find_div = driver.find_element_by_css_selector("#haha>iframe")
    driver.switch_to.frame(find_div)

    js = 'window.open("http://www.4399dmw.com")'
    driver.execute_script(js)


    url = "http://google.com"
    driver.get(url)

    #当前有多少个窗口并且句柄是什么
    print(driver.window_handles)

    #切换选项卡
    driver.switch_to_window(driver.window_handles[1])


    #鼠标点击像素操作
    ActionChains(driver).move_by_offset(200,300).click().perform()
    ActionChains(driver).move_by_offset(-200,-300).perform()
    ActionChains(driver).move_by_offset(400,400).click().perform()
    ActionChains(driver).move_by_offset(-400,-400).perform()


    #托拽操作
    first_tar = driver.find_element_by_xpath("//p[contains(text(),'峡谷重案组第一季')]")
    second_tar = driver.find_element_by_xpath("//p[contains(text(),'吃鸡大作战')]")
    action = ActionChains(driver)
    driver.click()


'''

if __name__ == '__main__':
    main()
